{"version":3,"sources":["components/EmployeeTable/EmployeeTable.js","components/SearchEmployee/SearchEmployee.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","src","image","alt","id","lastName","firstName","occupation","type","className","onClick","deleteEmployee","width","height","viewBox","fill","xmlns","fillRule","d","SearchEmployee","htmlFor","onChange","handleInputChange","value","name","placeholder","handleFormSubmit","App","state","employees","event","preventDefault","target","console","log","filter","employee","checkValues","Object","values","join","toLowerCase","indexOf","setState","filteredArray","sortLastName","sortedArray","slice","sort","a","b","localeCompare","sortFirstName","sortOccupation","sortId","this","scope","map","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49695d19.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\"\n\n// import App from \"../../App\"\n// import employees from \"../../employees.json\"\n\n\n\nfunction EmployeeTable(props) {\n  return (\n    <>\n    \n   \n      <tbody>\n        <tr>\n        <th ><img src={props.image} alt=\"random employee\"/></th>\n        <td>{props.id}</td>\n        <td>{props.lastName}</td>\n        <td>{props.firstName}</td>\n        <td>{props.occupation}</td>\n        <td>\n          <span type=\"button\" className=\"remove\" onClick={ function(){ props.deleteEmployee(props.id) }}>\n            <svg width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" className=\"bi bi-x\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n            </svg>\n          </span>\n        </td>\n        </tr>\n      </tbody>\n      {/* have to pass an anonymous function to contain a function so the function defined doesn't run until it is supposed to - basically hiding the filterArray until the user clicks on the remove button */}\n          </>\n  );\n}\n\nexport default EmployeeTable;","import React from \"react\";\n\nfunction SearchEmployee(props) {\n  \n  return (\n    <>\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search for an Employee or Occupation</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"search\"\n          type=\"input\"\n          className=\"form-control\"\n          placeholder=\"\"\n         \n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Reset Search\n        </button>\n      </div>\n    </form>\n    </>\n  );\n}\n\nexport default SearchEmployee;\n","import React from 'react';\nimport EmployeeTable from './components/EmployeeTable/EmployeeTable';\nimport employees from './employees.json';\nimport SearchEmployee from \"./components/SearchEmployee/SearchEmployee\";\nimport \"./style.css\"\n\n\nclass App extends React.Component {\n  \n  state = {\n    employees: employees,\n    // filtered: employees\n  };\n\n  componentDidMount(){\n    console.log(employees)\n    this.setState({employees: employees})\n\n  }\n\n\n\n  handleInputChange = event => {\n    event.preventDefault()\n    var value = event.target.value;\n    console.log(value)\n    var filter = this.state.employees.filter( employee => {\n      var checkValues = Object.values(employee)\n      .join(\"\").toLowerCase()\n      console.log(checkValues)\n\n      return checkValues.indexOf(value.toLowerCase()) !== -1\n    })\n        this.setState({employees: filter})\n    \n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    \n    console.log(event)\n  }\n\n\n\n\n  \n// delete employee\n  deleteEmployee = (id) => {\n    // modify the array in state and filter out the one which matched whatever id is passed in\n    console.log(id)\n    const filteredArray = this.state.employees.filter( employee => employee.id !== id )\n    console.log(filteredArray)\n    this.setState({employees: filteredArray})\n  };\n\n \n // sort table by column\n  sortLastName = () => {\n    const newEmployeesArray = this.state.employees.slice(0)\n    const sortedArray = newEmployeesArray.sort((a, b) => a.lastName.localeCompare(b.lastName))\n    this.setState({...this.state, employees: sortedArray});\n    console.log(sortedArray)\n};\n  sortFirstName = () => {\n    const newEmployeesArray = this.state.employees.slice(0)\n    const sortedArray = newEmployeesArray.sort((a, b) => a.firstName.localeCompare(b.firstName))\n    this.setState({...this.state, employees: sortedArray});\n  };\n  sortOccupation = () => {\n    const newEmployeesArray = this.state.employees.slice(0)\n    const sortedArray = newEmployeesArray.sort((a, b) => a.occupation.localeCompare(b.occupation))\n    this.setState({...this.state, employees: sortedArray});\n  };\n  sortId = () => {\n    const newEmployeesArray = this.state.employees.slice(0)\n    const sortedArray = newEmployeesArray.sort((a, b) => a.id - b.id)\n    this.setState({...this.state, employees: sortedArray});\n  };\n  \n  render(){\n\n  return (\n    \n    <>\n      <h1>Employee List</h1>\n      {/* map over the array in the state, render FriendCard each time */}\n        <>\n      <SearchEmployee handleInputChange={this.handleInputChange}/>\n        </>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n        <th scope=\"col-1\"></th>\n        <th scope=\"col-1\" className=\"sort\" onClick={this.sortId}>id</th>\n        <th scope=\"col-2\" className=\"sort\" onClick={this.sortLastName}>Last Name</th>\n        <th scope=\"col-2\" className=\"sort\" onClick={this.sortFirstName}>First Name</th>\n        <th scope=\"col-2\" className=\"sort\" onClick={this.sortOccupation}>Occupation</th>\n        <th scope=\"col-1\"></th>\n        </tr>\n        </thead>\n      {this.state.employees.map(employee => (\n        <>\n        <EmployeeTable key={employee.id} {...employee} deleteEmployee={this.deleteEmployee}/>\n       \n        </>\n      ))}\n    </table>\n    </>\n  )\n  }};\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}